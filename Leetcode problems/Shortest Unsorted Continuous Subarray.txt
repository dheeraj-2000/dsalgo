#include<bits/stdc++.h>

using namespace std;

class Solution {
public:
    int findUnsortedSubarray(vector<int>& nums) {
        if(nums.size() == 1)
            return 0;
        int flag = 0, k1 = -1, k2 = -1;
        for(int i = 1; i < nums.size(); i++)
        {
            if(nums[i] < nums[i-1])
            {
                if(flag == 0){
                    k1 = i-1;
                    k2 = i;
                    flag = 1;
                }
                else
                    k2 = i;
            }
        }
        if(flag == 0)
            return 0;
        int MAX = INT_MIN;
        int MIN = INT_MAX;
        for(int i = k1; i <= k2; i++)
        {
            if(nums[i] > MAX)
                MAX = nums[i];
            if(nums[i] < MIN)
                MIN  = nums[i];
        }
        while(k2+1 < nums.size() && nums[k2+1] < MAX)
            k2++;
        while(k1-1 >= 0 && nums[k1-1] > MIN)
            k1--;
        return k2-k1+1;
    }
};

int main()
{
    vector<int>array{2,6,4,8,10,9,15};
    Solution s;
    cout << s.findUnsortedSubarray(array);
    return 0;
}
